dnl
dnl $Log: configure.in,v $
dnl Revision 1.1  2001-10-13 07:58:15  bryce
dnl Initial revision
dnl
dnl Revision 1.8  2000/11/28 20:09:42  alriddoch
dnl Tidied up some legacy includes and classes
dnl
dnl Revision 1.7  2000/11/11 04:30:50  alriddoch
dnl 	* Re-wrote all Atlas related code to use new Atlas-C++.
dnl
dnl It doesn't work yet, but it does compile, link and connect to the server.
dnl
dnl Al
dnl
dnl Revision 1.6  2000/05/05 17:34:14  laurel
dnl Gatherer is now a Command::Module, so we can chain gatherers.
dnl
dnl Revision 1.5  2000/03/16 19:52:38  laurel
dnl let's see if it "compiles" now.
dnl
dnl Revision 1.4  2000/03/14 04:09:57  laurel
dnl Fixed Atlas-C++ configure check so it works now.
dnl Does Atlas-C++ come with a configure check?  If not, should it?
dnl Thanks to ajr@ecs.soton.ac.uk
dnl
dnl Revision 1.3  2000/02/21 23:02:56  dert
dnl Added --with-atlas=/some/directory to autoconf.
dnl We are currently only checking for AtlasDebug.
dnl Hopefully we can use CVS-Log syntax in m4 files.
dnl
dnl

dnl Initialise autoconf

AC_INIT()

dnl Initialise automake

AM_INIT_AUTOMAKE("clay", "0.1.0")

dnl Test for C++ compiler

AC_PROG_CXX

dnl Test for WorldForge Atlas Libraries

AC_LANG_CPLUSPLUS
AC_REQUIRE_CPP

dnl check for libraries
AC_CHECK_LIB(readline, readline)
AC_CHECK_LIB(bz2, bzopen)

AC_CACHE_CHECK(for location of Atlas, clay_cv_libatlas,
[
	clay_cv_libatlas=/usr/local
	AC_ARG_WITH(atlas,
	[  --with-atlas=DIR           libAtlas is installed in ],
	[
		if test $withval != yes; then
			clay_cv_libatlas=$withval
		fi
	])
])
CPPFLAGS="$CPPFLAGS -I${clay_cv_libatlas}/include"
LDFLAGS="$LDFLAGS -L${clay_cv_libatlas}/lib"

AC_CACHE_VAL(clay_cv_atlas_headers,
[
	atlash="$atlash Atlas/Message/Object.h"
	atlash="$atlash Atlas/Net/Stream.h"
	atlash="$atlash Atlas/Codec.h"
	atlash="$atlash Atlas/Objects/Decoder.h"
    AC_CHECK_HEADERS(`echo $atlash`, [],
	[
		AC_MSG_ERROR(Couldn't find working Atlas headers.)
	])
])

AC_CACHE_VAL(clay_cv_atlas_libraries,
[
	AC_CHECK_LIB(Atlas, main,
    [
        LIBS="$LIBS -lAtlas"
        LIBS="$LIBS -lAtlasCodecs"
        LIBS="$LIBS -lAtlasFilters"
        LIBS="$LIBS -lAtlasMessage"
        LIBS="$LIBS -lAtlasNet"
        LIBS="$LIBS -lAtlasObjects"
        LIBS="$LIBS -lAtlasObjectsOperation"
        LIBS="$LIBS -lAtlasObjectsEntity"
    ],
	[
		AC_MSG_ERROR(Couldn't find working Atlas libraries.);
	])
])

dnl Generate files
AC_OUTPUT([
	Makefile
	src/Makefile
])
